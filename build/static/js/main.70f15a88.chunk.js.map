{"version":3,"sources":["Button/Button.js","Posts/Post.js","Form/Input.js","Messages/ErrorMessage.js","Messages/SuccessMessage.js","Form/Form.js","App/App.js","serviceWorker.js","index.js"],"names":["Button","props","className","this","class","tabIndex","id","text","React","Component","Post","state","data","localStorage","getItem","removeOnClick","bind","e","title","tags","map","tag","i","key","onClick","Input","type","onChange","name","placeholder","ErrorMessage","message","SuccessMessage","isShow","setInterval","setState","Form","handleChange","target","value","onSubmit","JSON","stringify","body","errorMessage","successMessage","setTimeout","preventDefault","a","async","push","parse","length","toString","split","updateData","App","setItem","filter","initDefaultData","Posts","post","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70f15a88.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Button extends React.Component {\r\n    // eslint-disable-next-line\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <button className={this.props.class ? this.props.class : ''} tabIndex={this.props.id ? this.props.id : ''}>{this.props.text}</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Buttom from '../Button/Button';\r\nimport './Post.css';\r\n\r\n/*\r\n * Компонент вывода постов на странице\r\n * props:\r\n *  id\r\n *  title\r\n *  text\r\n*/\r\n\r\nclass Post extends React.Component {\r\n    // eslint-disable-next-line\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { data: localStorage.getItem('localData') }\r\n        this.removeOnClick = this.removeOnClick.bind(this);\r\n    }\r\n\r\n    removeOnClick(e) {\r\n        this.props.removeOnClick(this.props.id)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <article>\r\n                <header>\r\n                    <h3>{this.props.title}</h3>\r\n                </header>\r\n                <section>\r\n                    <p>{this.props.text}</p>\r\n                </section>\r\n                <footer>\r\n                    <div className=\"tags\">\r\n                        {this.props.tags.map((tag, i) => {\r\n                            return (<Buttom class=\"btn btn-xs btn-default\" text={tag} key={i} />)\r\n                        })\r\n                        }\r\n\r\n                    </div>\r\n                </footer>\r\n                <div className=\"controls\">\r\n                    <button onClick={(e) => this.removeOnClick(e)} className=\"btn btn-danger btn-mini\">удалить</button>\r\n                </div>\r\n            </article>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\n\r\n\r\n/*\r\n * Компонент полей ввода для фоомы\r\n * props:\r\n *  type\r\n *  name\r\n *  placeholder\r\n *  Обработчик onChange для формы\r\n*/\r\nclass Input extends React.Component {\r\n    // eslint-disable-next-line\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <input type={this.props.type} onChange={this.props.onChange} className=\"form-control\" name={this.props.name} placeholder={this.props.placeholder} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Input;","import React from 'react';\r\n\r\n/*\r\n * Компонент вывода сообщения об ошибках на странице\r\n * props:\r\n *  message\r\n*/\r\nclass ErrorMessage extends React.Component {\r\n  // eslint-disable-next-line\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"alert alert-danger\">{this.props.message}</div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ErrorMessage;","import React from 'react';\r\n\r\n/*\r\n * Компонент вывода успешного сообщения на странице\r\n * props:\r\n *  message\r\n*/\r\nclass SuccessMessage extends React.Component {\r\n    // eslint-disable-next-line\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShow: true\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        setInterval(() => (this.setState({ isShow: false })), 4000);\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.isShow ? <div className=\"alert alert-success\">{this.props.message}</div> : ''}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SuccessMessage;","import React from 'react';\r\nimport Input from './Input';\r\nimport ErrorMessage from '../Messages/ErrorMessage';\r\nimport SuccessMessage from '../Messages/SuccessMessage';\r\n\r\n\r\n/*\r\n * Компонент формы добавления статей в блог\r\n*/\r\n\r\nclass Form extends React.Component {\r\n    // eslint-disable-next-line\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            data: JSON.stringify(localStorage.getItem('localData')),\r\n            id: '',\r\n            title: '',\r\n            body: '',\r\n            tags: '',\r\n            errorMessage: '',\r\n            successMessage: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({\r\n                successMessage: ''\r\n            });\r\n        }, 3000)\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault();\r\n        if (!this.state.title) {\r\n            this.setState({\r\n                errorMessage: \"Укажите название статьи!\",\r\n                successMessage: ''\r\n            });\r\n            await setTimeout(async () => (this.setState({ errorMessage: '' })), 8000);\r\n            return;\r\n        }\r\n\r\n        if (!this.state.body) {\r\n            this.setState({\r\n                errorMessage: \"Укажите текст статьи!\",\r\n                successMessage: ''\r\n            });\r\n            await setTimeout(async () => (this.setState({ errorMessage: '' })), 6000);\r\n            return;\r\n        }\r\n\r\n        if (!this.state.tags) {\r\n            this.setState({\r\n                errorMessage: \"Добавьте теги к статье!\",\r\n                successMessage: ''\r\n            });\r\n            await setTimeout(async () => (this.setState({ errorMessage: '' })), 7000);\r\n            return;\r\n        }\r\n\r\n\r\n\r\n\r\n        var data = [];\r\n        data.push(JSON.parse(localStorage.getItem('localData')));\r\n        data[0].push({\r\n            id: data[0].length + 1,\r\n            title: this.state.title,\r\n            body: this.state.body,\r\n            tags: this.state.tags.toString().split(',')\r\n        });\r\n        this.setState({\r\n            data: data\r\n        });\r\n        this.props.updateData(data);\r\n        this.setState({\r\n            successMessage: \"Запись успешно добавлена\",\r\n            errorMessage: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form id=\"post-add\" className=\"col-lg-4\">\r\n                {this.state.errorMessage === '' ? '' : <ErrorMessage message={this.state.errorMessage} />}\r\n                {this.state.successMessage === '' ? '' : <SuccessMessage message={this.state.successMessage} />}\r\n                <Input type=\"text\" name=\"title\" value={this.state.title} placeholder=\"Заголовок\" onChange={e => this.handleChange(e)} />\r\n                <Input type=\"text\" name=\"body\" value={this.state.body} placeholder=\"запись\" onChange={e => this.handleChange(e)} />\r\n                <Input type=\"text\" name=\"tags\" value={this.state.tags} placeholder=\"тег, еще тег\" onChange={e => this.handleChange(e)} />\r\n                <button type=\"submit\" onClick={(e) => this.onSubmit(e)} className=\"btn btn-primary\">Добавить</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\nimport './App.css';\nimport Post from '../Posts/Post';\nimport Form from '../Form/Form';\nimport Posts from './posts.json'\n\n\n\n/*\n * Главный компонет всего приложения\n*/\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initDefaultData();\n    this.updateData = this.updateData.bind(this);\n    this.state = { data: JSON.parse(localStorage.getItem('localData')) };\n  }\n\n  initDefaultData() {\n    localStorage.setItem('localData', JSON.stringify(Posts));\n  }\n\n  updateData = (value) => {\n    localStorage.setItem('localData', JSON.stringify(value[0]));\n    this.setState({ data: JSON.parse(localStorage.getItem('localData')) });\n  }\n  /*\n   * Удаление записей\n   */\n  removeOnClick = (id) => {\n    var data = this.state.data;\n    data = data.filter((data) => {\n      return data.id !== id;\n    });\n\n    localStorage.setItem('localData', JSON.stringify(data));\n    this.setState({ data: JSON.parse(localStorage.getItem('localData')) });\n  }\n  render() {\n    // Генерация постов из localStorage\n    return (\n      <div>\n        <div id=\"posts\" className=\"well\">\n          {this.state.data.map((post, i) => {\n            return (\n              <Post title={post.title} removeOnClick={this.removeOnClick} text={post.body} tags={post.tags} key={i} id={post.id} />\n            )\n          })}\n        </div>\n        <Form updateData={this.updateData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}